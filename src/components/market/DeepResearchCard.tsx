
import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Loader2, Search, FileText, RefreshCw } from 'lucide-react';

interface DeepResearchCardProps {
  description?: string;
  marketId: string;
}

export function DeepResearchCard({ description, marketId }: DeepResearchCardProps) {
  const [isLoading, setIsLoading] = useState(false);
  const [researchResults, setResearchResults] = useState<{
    title?: string;
    executiveSummary?: string;
    keyFindings?: string[];
    analysis?: string;
    conclusion?: string;
  } | null>(null);
  const [iteration, setIteration] = useState(0);
  const [totalIterations, setTotalIterations] = useState(3);
  const [currentQuery, setCurrentQuery] = useState('');

  const handleStartResearch = () => {
    setIsLoading(true);
    setIteration(1);
    
    // Simulate the research process with timers
    // This would be replaced by actual API calls to the edge function
    setCurrentQuery(`Initial query for: ${description?.substring(0, 30)}...`);
    
    // Simulate multiple iterations
    setTimeout(() => {
      setIteration(2);
      setCurrentQuery(`Follow-up query on ${description?.substring(0, 20)}...`);
      
      setTimeout(() => {
        setIteration(3);
        setCurrentQuery(`Final research on ${description?.substring(0, 15)}...`);
        
        // Simulate completion after the final iteration
        setTimeout(() => {
          setIsLoading(false);
          setResearchResults({
            title: `Research: ${description?.substring(0, 40)}`,
            executiveSummary: "This is a placeholder for executive summary that would be generated by the deep research process. The actual implementation will use an edge function to perform iterative research using AI.",
            keyFindings: [
              "Key finding 1 would appear here from the research",
              "Key finding 2 would include specific details",
              "Key finding 3 would contain factual information"
            ],
            analysis: "A comprehensive analysis would be shown here based on multiple iterations of research. This would include detailed insights gathered from various sources.",
            conclusion: "The conclusion would directly answer the original research question based on all gathered evidence."
          });
        }, 2000);
      }, 2000);
    }, 2000);
  };

  const handleReset = () => {
    setResearchResults(null);
    setIteration(0);
    setCurrentQuery('');
  };

  return (
    <Card className="bg-background/70 backdrop-blur-sm border-muted">
      <CardHeader className="pb-3">
        <CardTitle className="text-base font-medium flex items-center gap-2">
          <FileText className="h-4 w-4" />
          Deep Research
        </CardTitle>
      </CardHeader>
      <CardContent>
        {isLoading ? (
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <div className="text-sm font-medium">Research in progress...</div>
              <div className="text-sm text-muted-foreground">
                Iteration {iteration}/{totalIterations}
              </div>
            </div>
            
            <div className="flex items-center gap-2 text-xs text-muted-foreground">
              <Search className="h-3.5 w-3.5" />
              <span className="flex-1">{currentQuery}</span>
            </div>
            
            <div className="w-full bg-accent/30 h-2 rounded-full overflow-hidden">
              <div 
                className="bg-primary h-full transition-all duration-500 ease-in-out"
                style={{ width: `${(iteration / totalIterations) * 100}%` }}
              />
            </div>
            
            <div className="flex justify-center pt-2">
              <Loader2 className="h-6 w-6 animate-spin text-primary" />
            </div>
          </div>
        ) : researchResults ? (
          <div className="space-y-4">
            <div>
              <h3 className="text-sm font-semibold mb-1">{researchResults.title}</h3>
              <p className="text-xs text-muted-foreground">
                {researchResults.executiveSummary}
              </p>
            </div>
            
            {researchResults.keyFindings && researchResults.keyFindings.length > 0 && (
              <div>
                <h4 className="text-xs font-semibold mb-1">Key Findings</h4>
                <ul className="text-xs space-y-1 list-disc pl-4">
                  {researchResults.keyFindings.map((finding, index) => (
                    <li key={index} className="text-muted-foreground">{finding}</li>
                  ))}
                </ul>
              </div>
            )}
            
            <div>
              <h4 className="text-xs font-semibold mb-1">Conclusion</h4>
              <p className="text-xs text-muted-foreground">
                {researchResults.conclusion}
              </p>
            </div>
            
            <Button 
              variant="outline" 
              size="sm" 
              className="w-full flex gap-2 mt-2"
              onClick={handleReset}
            >
              <RefreshCw className="h-3.5 w-3.5" />
              Reset Research
            </Button>
          </div>
        ) : (
          <div className="space-y-3">
            <p className="text-xs text-muted-foreground">
              Conduct deep, iterative research on this market using AI to generate insights and analysis.
            </p>
            
            <Button 
              variant="default" 
              size="sm" 
              className="w-full"
              onClick={handleStartResearch}
            >
              Start Deep Research
            </Button>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
